Task 1: Create a procedure called proc_display that simply prints "Hello from Procedure!".
---CREATE OR REPLACE PROCEDURE proc_display AS
BEGIN
  DBMS_OUTPUT.PUT_LINE('Hello from Procedure!');
END;
BEGIN
  proc_display;
END;----

Task 2: Create a procedure proc_greet that takes a v_name parameter and prints "Hello, [v_name]!".
---
create or  replace procedure proc_greet(v_name in varchar2) as
begin
  DBMS_OUTPUT.PUT_LINE('Hello, ' || v_name || '!');
end;
/
begin
  proc_greet('Khumar');
end;
/
----

Task 3: Create a function func_square that takes a number as an argument and returns its square.
---create or replace function func_square(num in number) return number as
begin
  return num * num;
end;
declare
  newnumber number := 5;
  squared_number number;
begin
  squared_number := func_square(newnumber);
  dbms_output≈üput_line('The square of ' || newnumber || ' is ' || squared_number);
END;---

Task 4: Write a function func_upper that takes a string and returns its uppercase version.
----create or replace function  func_upper(input_string varchar2) return varchar2 is
    upper_string varchar2(50); 
begin
    upper_string := upper(input_string);
    return upper_string;
end func_upper;
/

declare
    input_str varchar2(100) := 'khumar';
    result_str varchar2(100);
BEGIN
    result_str := func_upper(input_str);
    dbms_output.put_line(result_str);
END;------

Task 5: Create a procedure proc_fullname that takes v_firstName and v_lastName as parameters and prints the full name.
create or replace procedure proc_fullname (
    v_firstName varchar2,
    v_lastName varchar2
) is
begin
    dbms_output.put_line('Full Name: ' || 'is' || ' ' || v_firstName || ' ' || v_lastName);
end proc_fullname;
BEGIN
    proc_fullname('Khumar', 'Mirzayeva');
END;

Task 6: Write a function func_ageGroup that takes an age as a parameter and returns 'Child' if age is less than 18, 'Adult' otherwise.

create or replace  function func_ageGroup(v_age number) return varchar2 is
    age_group varchar2(20);
begin
    if v_age < 18 then
        age_group := 'Child';
    else
        age_group := 'Adult';
    end if;

    return age_group;
end func_ageGroup;
/
declare
    age number := 20;
    age_category varchar2(20);
begin
    age_category := func_ageGroup(age);
    DBMS_OUTPUT.PUT_LINE( age_category);
end;
/
Task 7--------
Task 8-Write a function func_calculateArea that takes the radius of a circle as an argument and returns its area.
create or replace function func_calculateArea(v_radius number) return number is
    pi constant number := 3.14;
    circle_area number;
begin
    circle_area := pi * v_radius * v_radius;
    return circle_area;
end func_calculateArea;
/
declare
    radius number := 9;
    area number;
begin
    area := func_calculateArea(radius);
    dbms_output.put_line('Circle Area: ' || area);
end;
Task 9-
